knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
data_sim <- function(seed, nobs, beta, sigma, xmeans, xsigs){
set.seed(seed)
xrn <- rmvnorm(nobs, mean = xmeans, sigma = xsigs)
xped <- cbind(rep(1,nobs),xrn)
y <- xped %*% beta + rnorm(nobs ,0, sigma)
df <- data.frame(x=xrn, y=y)
return(df)
}
parallel_lm <- function(data){
lm_res <- lm(y ~ x.1 + x.2 + x.3, data = data)
return(list(coef=coef(lm_res), lm_results=lm_res))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
data_sim <- function(seed, nobs, beta, sigma, xmeans, xsigs){
set.seed(seed)
xrn <- rmvnorm(nobs, mean = xmeans, sigma = xsigs)
xped <- cbind(rep(1,nobs),xrn)
y <- xped %*% beta + rnorm(nobs ,0, sigma)
df <- data.frame(x=xrn, y=y)
return(df)
}
parallel_lm <- function(data){
lm_res <- lm(y ~ x.1 + x.2 + x.3, data = data)
return(list(coef=coef(lm_res), lm_results=lm_res))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
data_sim <- function(seed, nobs, beta, sigma, xmeans, xsigs){
set.seed(seed)
xrn <- rmvnorm(nobs, mean = xmeans, sigma = xsigs)
xped <- cbind(rep(1,nobs),xrn)
y <- xped %*% beta + rnorm(nobs ,0, sigma)
df <- data.frame(x=xrn, y=y)
return(df)
}
parallel_lm <- function(data){
lm_res <- lm(y ~ x.1 + x.2 + x.3, data = data)
return(list(coef=coef(lm_res), lm_results=lm_res))
}
distill::create_theme(name = "theme")
distill::create_theme(name = "theme")
rmarkdown::render_site(encoding = 'UTF-8')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(parallel)
library(mvtnorm)
N <- 10000
nobs <- 200
beta <- c(5, 4, -5, -3)
xmeans <- c(-2, 0, 2)
xsigs <-diag(rep(1, 3))
sig <- 3
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
data_sim <- function(seed, nobs, beta, sigma, xmeans, xsigs){
set.seed(seed)
xrn <- rmvnorm(nobs, mean = xmeans, sigma = xsigs)
xped <- cbind(rep(1,nobs),xrn)
y <- xped %*% beta + rnorm(nobs ,0, sigma)
df <- data.frame(x=xrn, y=y)
return(df)
}
start <- Sys.time()
parallel_data <- lapply(c(1:N), data_sim,
nobs = nobs, beta = beta, sigma = sig, xmeans = xmeans, xsigs = xsigs)
Sys.time()-start
detectCores()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
data_sim <- function(seed, nobs, beta, sigma, xmeans, xsigs){
set.seed(seed)
xrn <- rmvnorm(nobs, mean = xmeans, sigma = xsigs)
xped <- cbind(rep(1,nobs),xrn)
y <- xped %*% beta + rnorm(nobs ,0, sigma)
df <- data.frame(x=xrn, y=y)
return(df)
}
parallel_lm <- function(data){
lm_res <- lm(y ~ x.1 + x.2 + x.3, data = data)
return(coef(lm_res))
}
library(parallel)
library(mvtnorm)
N <- 10000
nobs <- 200
beta <- c(5, 4, -5, -3)
xmeans <- c(-2, 0, 2)
xsigs <-diag(rep(1, 3))
sig <- 3
start <- Sys.time()
parallel_data <- lapply(c(1:N), data_sim,
nobs = nobs, beta = beta, sigma = sig, xmeans = xmeans, xsigs = xsigs)
Sys.time()-start
detectCores()
ncores <- 8
start <- Sys.time()
lapply_results <- lapply(parallel_data, parallel_lm)
(lapply_time <- Sys.time()-start)
start <- Sys.time()
mclapply_results <- mclapply(parallel_data, parallel_lm, mc.cores = ncores)
(mclapply_time <- Sys.time()-start)
start <- Sys.time()
cl <- makeCluster(ncores)
clusterExport(cl, c("parallel_lm"))
parLapply_results<-parLapply(cl,parallel_data,parallel_lm)
stopCluster(cl)
(parLapply_time <- Sys.time()-start)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
data_sim <- function(seed, nobs, beta, sigma, xmeans, xsigs){
set.seed(seed)
xrn <- rmvnorm(nobs, mean = xmeans, sigma = xsigs)
xped <- cbind(rep(1,nobs),xrn)
y <- xped %*% beta + rnorm(nobs ,0, sigma)
df <- data.frame(x=xrn, y=y)
return(df)
}
parallel_lm <- function(data){
lm_res <- lm(y ~ x.1 + x.2 + x.3, data = data)
return(coef(lm_res))
}
library(parallel)
library(mvtnorm)
N <- 10000
nobs <- 200
beta <- c(5, 4, -5, -3)
xmeans <- c(-2, 0, 2)
xsigs <-diag(rep(1, 3))
sig <- 3
start <- Sys.time()
parallel_data <- lapply(c(1:N), data_sim,
nobs = nobs, beta = beta, sigma = sig, xmeans = xmeans, xsigs = xsigs)
Sys.time()-start
detectCores()
ncores <- 8
start <- Sys.time()
lapply_results <- lapply(parallel_data, parallel_lm)
(lapply_time <- Sys.time()-start)
start <- Sys.time()
mclapply_results <- mclapply(parallel_data, parallel_lm, mc.cores = ncores)
(mclapply_time <- Sys.time()-start)
start <- Sys.time()
cl <- makeCluster(ncores)
clusterExport(cl, c("parallel_lm"))
parLapply_results<-parLapply(cl,parallel_data,parallel_lm)
stopCluster(cl)
(parLapply_time <- Sys.time()-start)
colMeans()
lapply_mat <- matrix(unlist(lapply_results), ncol = 4)
lapply_mat
colMeans(lapply_mat)
lapply_mat <- matrix(unlist(lapply_results), nrow = 4)
colMeans(lapply_mat)
rowMeans(lapply_mat)
rowMeans(lapply_mat)
rowMeans(mclapply_mat)
lapply_mat <- matrix(unlist(lapply_results), nrow = 4)
mclapply_mat <- matrix(unlist(mclapply_results), nrow = 4)
parLapply_mat <- matrix(unlist(parLapply_results), nrow = 4)
rowMeans(lapply_mat)
rowMeans(mclapply_mat)
rowMeans(parLapply_mat)
